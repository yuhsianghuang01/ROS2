# Simple Follower ROS2 索引文件

## 快速導航索引

### 📁 檔案結構導航

```
simple_follower_ros2/
├── 📋 README.md                    # 主要說明文件 (本文件)
├── 📋 README.index                 # 快速導航索引 (此文件)
├── 🗂️  launch/                     # 啟動檔案目錄
│   ├── 🚀 adjust_hsv.launch.py     # HSV顏色調整工具
│   ├── 🚀 laser_follower.launch.py # 雷射跟隨系統啟動
│   ├── 🚀 line_follower.launch.py  # 線跟隨系統啟動
│   └── 🚀 visual_follower.launch.py# 視覺跟隨系統啟動
├── 🗂️  msg/                        # 自定義訊息定義
│   └── 📄 Position.msg             # 位置訊息格式
├── 🗂️  param/                      # 參數配置檔案
│   ├── 📄 pid_laser_param.yaml     # 雷射PID參數
│   └── 📄 PID_visual_param.yaml    # 視覺PID參數
├── 🗂️  simple_follower_ros2/       # 主程式目錄
│   ├── 🐍 adjust_hsv.py            # HSV調整工具
│   ├── 🐍 laserfollower.py         # 雷射跟隨控制器
│   ├── 🐍 laserTracker.py          # 雷射追蹤器
│   ├── 🐍 line_follow.py           # 線跟隨控制器
│   ├── 🐍 visualFollower.py        # 視覺跟隨控制器
│   └── 🐍 visualTracker.py         # 視覺追蹤器
├── 📄 package.xml                  # 套件資訊檔案
├── 📄 setup.py                     # Python套件設定
└── 📄 setup.cfg                    # 套件配置
```

### 🎯 功能模組快速索引

#### 🔴 雷射跟隨系統 (Laser Following System)
| 檔案 | 功能 | 修改時機 | 相關參數 |
|------|------|----------|----------|
| `laser_follower.launch.py` | 系統啟動配置 | 新增硬體/修改架構 | 機器人型號、LiDAR型號 |
| `laserfollower.py` | 主控制邏輯 | 調整控制策略 | PID參數、安全距離 |
| `laserTracker.py` | 物體偵測追蹤 | 改善偵測效果 | 距離閾值、聚類參數 |
| `pid_laser_param.yaml` | PID控制參數 | 優化跟隨性能 | P、I、D增益係數 |

#### 🔵 視覺跟隨系統 (Visual Following System)
| 檔案 | 功能 | 修改時機 | 相關參數 |
|------|------|----------|----------|
| `visual_follower.launch.py` | 系統啟動配置 | 新增相機/修改架構 | 相機型號、影像尺寸 |
| `visualFollower.py` | 視覺控制邏輯 | 調整跟隨行為 | 色彩閾值、控制增益 |
| `visualTracker.py` | 視覺物體追蹤 | 改善識別精度 | HSV範圍、形態學參數 |
| `adjust_hsv.launch.py` | 顏色參數調整 | 校正目標顏色 | HSV上下限值 |

#### 🟢 線跟隨系統 (Line Following System)
| 檔案 | 功能 | 修改時機 | 相關參數 |
|------|------|----------|----------|
| `line_follower.launch.py` | 線跟隨啟動 | 系統部署配置 | 相機設定、控制模式 |
| `line_follow.py` | 線跟隨控制器 | 調整跟線性能 | PD參數、線偵測閾值 |

### 🔧 常見修改情境指南

#### 情境 1：機器人跟隨距離不合適
**症狀**：機器人距離目標太近或太遠
**修改位置**：
- 📂 `laserfollower.py` → 第 200-220 行 → `target_distance` 參數
- 📂 `visualFollower.py` → 第 180-200 行 → 距離控制邏輯
- 📂 `param/pid_laser_param.yaml` → `targetDist` 參數

#### 情境 2：機器人運動不穩定 (震盪、超調)
**症狀**：機器人左右搖擺、來回震盪
**修改位置**：
- 📂 `param/pid_laser_param.yaml` → PID參數 (降低P值、增加D值)
- 📂 `param/PID_visual_param.yaml` → 視覺PID參數
- 📂 `laserfollower.py` → 第 300-350 行 → PID計算邏輯

#### 情境 3：物體偵測不準確
**症狀**：經常丟失目標或誤判目標
**修改位置**：
- 📂 `laserTracker.py` → 第 100-150 行 → 距離閾值和聚類參數
- 📂 `visualTracker.py` → 第 80-120 行 → HSV顏色範圍
- 📂 `adjust_hsv.py` → 即時調整HSV參數

#### 情境 4：機器人反應速度過快/過慢
**症狀**：響應延遲或過度靈敏
**修改位置**：
- 📂 `laserfollower.py` → 第 250-280 行 → 速度限制 `max_speed`
- 📂 `visualFollower.py` → 第 220-250 行 → 控制頻率調整
- 📂 `param/*.yaml` → 所有PID參數檔案 → P值調整

#### 情境 5：新增不同型號的感測器
**症狀**：需要支援新的LiDAR或相機
**修改位置**：
- 📂 `laser_follower.launch.py` → 第 80-100 行 → LiDAR驅動選擇
- 📂 `visual_follower.launch.py` → 第 90-120 行 → 相機驅動配置
- 📂 `package.xml` → 新增相依性套件

#### 情境 6：修改手把控制按鈕映射
**症狀**：想要使用不同的按鈕控制啟動/停止
**修改位置**：
- 📂 `laserfollower.py` → 第 120-130 行 → `controllButtonIndex`
- 📂 `visualFollower.py` → 第 110-120 行 → 按鈕索引定義

### 🎮 控制邏輯流程圖

#### 雷射跟隨控制流程
```
開始 → 初始化ROS2節點 → 等待LiDAR資料
  ↓
接收掃描資料 → 物體偵測演算法 → 計算位置偏差
  ↓
PID控制器計算 → 速度限制檢查 → 安全距離檢查
  ↓
發布cmd_vel → 機器人移動 → 返回接收資料
  ↑                              ↓
手把控制介入 ← 連線監控 ← 系統安全檢查
```

#### 視覺跟隨控制流程
```
開始 → 初始化相機 → 接收影像資料
  ↓
HSV顏色轉換 → 顏色濾波 → 輪廓偵測
  ↓
質心計算 → 深度匹配 → 3D位置計算
  ↓
PID控制器 → 運動指令 → 機器人執行
  ↑                      ↓
參數調整 ← 性能監控 ← 效果評估
```

### 📊 參數調整指南表

#### PID 參數效果對照表
| 參數 | 數值過大的症狀 | 數值過小的症狀 | 建議調整方向 |
|------|----------------|----------------|--------------|
| **P (比例)** | 震盪、超調 | 響應緩慢、穩態誤差 | 先調P值，觀察基本響應 |
| **I (積分)** | 積分飽和、不穩定 | 無法消除穩態誤差 | 最後微調，通常設很小值 |
| **D (微分)** | 對雜訊敏感、高頻震盪 | 超調量大、震盪難收斂 | 用於改善穩定性 |

#### 安全參數設定表
| 參數 | 建議範圍 | 影響 | 修改考量 |
|------|----------|------|----------|
| `max_speed` | 0.1-0.8 m/s | 最大移動速度 | 環境空間大小、安全需求 |
| `min_distance` | 0.1-0.3 m | 最小安全距離 | 機器人尺寸、感測器位置 |
| `target_distance` | 0.5-1.5 m | 理想跟隨距離 | 應用場景、使用者偏好 |

#### 感測器參數設定表
| 感測器 | 關鍵參數 | 建議值 | 調整目的 |
|--------|----------|--------|----------|
| **LiDAR** | 掃描頻率 | 10-20 Hz | 平衡精度與計算負荷 |
|  | 角度範圍 | -120°~120° | 涵蓋目標活動範圍 |
|  | 最大距離 | 3-8 m | 根據應用環境調整 |
| **相機** | 影像解析度 | 640x480 | 平衡品質與處理速度 |
|  | 幀率 | 15-30 fps | 確保追蹤連續性 |
|  | HSV範圍 | 根據目標調整 | 使用adjust_hsv工具 |

### 🐛 故障排除快速索引

#### 常見錯誤及解決位置
| 錯誤訊息 | 可能原因 | 檢查檔案 | 解決方法 |
|----------|----------|----------|----------|
| `No LiDAR data` | 感測器連接問題 | `laser_follower.launch.py` | 檢查設備連接和驅動 |
| `Target lost` | 物體偵測失敗 | `laserTracker.py`, `visualTracker.py` | 調整偵測參數 |
| `Controller disconnected` | 手把連線中斷 | `laserfollower.py:controllerLoss()` | 檢查手把電源和藍牙 |
| `PID parameters not loaded` | 參數檔案錯誤 | `param/*.yaml` | 檢查YAML格式和路徑 |
| `cmd_vel not published` | 控制輸出異常 | `*follower.py:publish()` | 檢查節點權限和話題 |

#### 性能問題診斷位置
| 症狀 | 檢查位置 | 可能原因 | 優化方向 |
|------|----------|----------|----------|
| CPU使用率過高 | `*Tracker.py` 運算邏輯 | 演算法複雜度 | 降低處理頻率、優化算法 |
| 記憶體持續增長 | 影像處理部分 | 記憶體泄漏 | 確保釋放影像緩衝區 |
| 響應延遲 | PID更新頻率 | 控制週期過長 | 增加控制頻率、減少計算 |
| 通訊中斷 | Launch檔案配置 | QoS設定問題 | 調整訊息佇列和可靠性 |

### 🔗 檔案相依關係圖

```
package.xml
    ↓
setup.py
    ↓
Launch Files ←→ Python Scripts ←→ Parameter Files
    ↓               ↓               ↓
系統啟動 ←→ 功能執行 ←→ 參數配置
    ↓               ↓               ↓
硬體驅動 ←→ 演算法邏輯 ←→ 控制調整
```

### 📝 開發工作流程建議

#### 新功能開發流程
1. **規劃階段**：確定功能需求 → 選擇感測器 → 設計演算法
2. **實作階段**：建立Python檔案 → 編寫核心邏輯 → 建立Launch檔案
3. **測試階段**：單元測試 → 整合測試 → 實機驗證
4. **優化階段**：性能調優 → 參數微調 → 安全驗證
5. **部署階段**：建立說明文件 → 打包發布 → 使用者培訓

#### 修改現有功能流程
1. **分析階段**：理解現有邏輯 → 找出修改點 → 評估影響範圍
2. **備份階段**：備份原始檔案 → 建立版本分支 → 記錄修改原因
3. **修改階段**：小步修改 → 逐步測試 → 確認功能正常
4. **驗證階段**：迴歸測試 → 性能對比 → 文件更新

### 💡 最佳實踐建議

#### 程式碼修改最佳實踐
1. **修改前務必備份**：`cp file.py file.py.backup`
2. **小步修改**：一次只改一個功能，避免大範圍修改
3. **測試驅動**：修改後立即測試，確保功能正常
4. **註解更新**：修改程式碼同時更新相關註解
5. **版本控制**：使用 git 記錄所有修改歷程

#### 參數調整最佳實踐
1. **記錄原始值**：修改前記錄預設參數值
2. **漸進調整**：小幅度逐步調整，觀察效果
3. **單一變數**：一次只調整一個參數
4. **環境一致**：在相同環境條件下測試參數效果
5. **建立基準**：建立標準測試場景和評估指標

---

**使用說明**
- 📋 使用此索引快速定位需要修改的檔案和參數
- 🎯 根據症狀快速找到對應的解決方案
- 🔧 按照建議流程進行系統修改和優化
- 📞 如有疑問，請參考主要 README.md 文件或聯繫技術支援

**維護資訊**
- 📅 建立時間：2025年7月
- 🔄 更新頻率：跟隨套件版本更新
- 👥 維護團隊：Simple Follower ROS2 開發組
- 📧 聯絡方式：請透過 GitHub Issues 回報問題
